# generated by datamodel-codegen:
#   filename:  k8s_swagger.json
#   timestamp: 2022-10-29T09:10:36+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field
from resources.io.k8s.api.core import v1 as corev1
from resources.io.k8s.apimachinery.pkg.apis.meta import v1 as metav1

from openshift_resources.resource import BaseResource, NewBaseModel
from wrapper_constants.resources import ApiGroups
from wrapper_constants.velero.backup_storage_location import BackupStorageLocationAccessMode, BackupStorageLocationPhase


class ObjectStorageLocation(NewBaseModel):
    bucket: str = Field(
        ..., description='Bucket is the bucket to use for object storage.'
    )
    caCert: Optional[str] = Field(
        None,
        description='CACert defines a CA bundle to use when verifying TLS connections to the provider.',
    )
    prefix: Optional[str] = Field(
        None,
        description='Prefix is the path inside a bucket to use for Velero storage. Optional.',
    )


class BackupStorageLocationSpec(NewBaseModel):
    accessMode: Optional[BackupStorageLocationAccessMode] = Field(
        None,
        description='AccessMode defines the permissions for the backup storage location.',
    )
    backupSyncPeriod: Optional[str] = Field(
        None,
        description='BackupSyncPeriod defines how frequently to sync backup API objects from object storage. A value of 0 disables sync.',
    )
    config: Optional[Dict[str, str]] = Field(
        None, description='Config is for provider-specific configuration fields.'
    )
    credential: Optional[corev1.SecretKeySelector] = Field(
        None,
        description='Credential contains the credential information intended to be used with this location',
    )
    default: Optional[bool] = Field(
        None,
        description='Default indicates this location is the default backup storage location.',
    )
    objectStorage: ObjectStorageLocation = Field(
        ...,
        description="ObjectStorageLocation specifies the settings necessary to connect to a provider's object storage.",
    )
    provider: str = Field(
        ..., description='Provider is the provider of the backup storage.'
    )
    validationFrequency: Optional[Any] = Field(
        None,
        description='ValidationFrequency defines how frequently to validate the corresponding object storage. A value of 0 disables validation.',
    )


class BackupStorageLocationStatus(NewBaseModel):
    accessMode: Optional[BackupStorageLocationAccessMode] = Field(
        None,
        description='AccessMode is an unused field. \n Deprecated: there is now an AccessMode field on the Spec and this field will be removed entirely as of v2.0.',
    )
    lastSyncedRevision: Optional[str] = Field(
        None,
        description="LastSyncedRevision is the value of the `metadata/revision` file in the backup storage location the last time the BSL's contents were synced into the cluster. \n Deprecated: this field is no longer updated or used for detecting changes to the location's contents and will be removed entirely in v2.0.",
    )
    lastSyncedTime: Optional[str] = Field(
        None,
        description='LastSyncedTime is the last time the contents of the location were synced into the cluster.',
    )
    lastValidationTime: Optional[str] = Field(
        None,
        description='LastValidationTime is the last time the backup store location was validated the cluster.',
    )
    message: Optional[str] = Field(
        None,
        description="Message is a message about the backup storage location's status.",
    )
    phase: Optional[BackupStorageLocationPhase] = Field(
        None, description='Phase is the current state of the BackupStorageLocation.'
    )


class BackupStorageLocation(BaseResource):
    api_group : Optional[str] = Field(ApiGroups.VELERO_API_GROUP.value, exclude=True, repr=False)

    spec: Optional[BackupStorageLocationSpec] = Field(
        None,
        description='BackupStorageLocationSpec defines the desired state of a Velero BackupStorageLocation',
    )
    status: Optional[BackupStorageLocationStatus] = Field(
        None,
        description='BackupStorageLocationStatus defines the observed state of BackupStorageLocation',
    )


class BackupStorageLocationList(NewBaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    items: List[BackupStorageLocation] = Field(
        ...,
        description='List of backupstoragelocations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[metav1.ListMeta] = Field(
        None,
        description='Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
